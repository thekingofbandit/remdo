import React from "react";
import FusionCharts from "fusioncharts";
import TimeSeries from "fusioncharts/fusioncharts.timeseries";
import ReactFC from "react-fusioncharts";
import CandyTheme from "fusioncharts/themes/fusioncharts.theme.candy";

ReactFC.fcRoot(FusionCharts, TimeSeries, CandyTheme);
// const fetch = require("node-fetch");
// const jsonify = (res) => res.json();
const dataFetch = [
  ["2018-01-01 00:00:00.000", "64.62", "5.275"],
  ["2018-01-01 01:00:00.000", "65.63", "7.098"],
  ["2018-01-01 02:00:00.000", "65.75", "4.857"],
  ["2018-01-01 03:00:00.000", "65.62", "5.725"],
  ["2018-01-01 04:00:00.000", "65.13", "6.001"],
  ["2018-01-01 05:00:00.000", "65.87", "1.3"],
  ["2018-01-01 06:00:00.000", "66.38", "1.1"],
  ["2018-01-01 07:00:00.000", "71", "1.1"],
  ["2018-01-01 08:00:00.000", "70.5", "4.539"],
  ["2018-01-01 09:00:00.000", "72.37", "1.1"],
  ["2018-01-01 10:00:00.000", "79.63", "1.4"],
  ["2018-01-01 11:00:00.000", "78.5", "5.605"],
  ["2018-01-01 12:00:00.000", "80.5", "1.8"],
  ["2018-01-01 13:00:00.000", "83.87", "2"],
  ["2018-01-01 14:00:00.000", "83.38", "2.5"],
  ["2018-01-01 15:00:00.000", "81.12", "5.575"],
  ["2018-01-01 16:00:00.000", "81.63", "4.283"],
  ["2018-01-01 17:00:00.000", "81.25", "3.899"],
  ["2018-01-01 18:00:00.000", "81.25", "4.8"],
  ["2018-01-01 19:00:00.000", "80", "3.93"],
  ["2018-01-01 20:00:00.000", "73.75", "4.092"],
  ["2018-01-01 21:00:00.000", "71.5", "3.802"],
  ["2018-01-01 22:00:00.000", "70.75", "6.766"],
  ["2018-01-01 23:00:00.000", "67.25", "5.107"],
  ["2018-01-02 00:00:00.000", "65.25", "4.842"],
  ["2018-01-02 01:00:00.000", "64.5", "6.059"],
  ["2018-01-02 02:00:00.000", "64.87", "4.354"],
  ["2018-01-02 03:00:00.000", "64.13", "5.796"],
  ["2018-01-02 04:00:00.000", "65.75", "7.05"],
  ["2018-01-02 05:00:00.000", "75.75", "4.479"],
  ["2018-01-02 06:00:00.000", "76.75", "3.831"],
  ["2018-01-02 07:00:00.000", "92.37", "3.82"],
  ["2018-01-02 08:00:00.000", "81.38", "5.241"],
  ["2018-01-02 09:00:00.000", "80.5", "5.981"],
  ["2018-01-02 10:00:00.000", "87.12", "5.626"],
  ["2018-01-02 11:00:00.000", "94.88", "4.158"],
  ["2018-01-02 12:00:00.000", "86.87", "4.328"],
  ["2018-01-02 13:00:00.000", "92", "3.745"],
  ["2018-01-02 14:00:00.000", "86.63", "5.006"],
  ["2018-01-02 15:00:00.000", "93.25", "6.123"],
  ["2018-01-02 16:00:00.000", "86.5", "5.189"],
  ["2018-01-02 17:00:00.000", "93.5", "3.707"],
  ["2018-01-02 18:00:00.000", "85.75", "5.733"],
  ["2018-01-02 19:00:00.000", "84.25", "4.88"],
  ["2018-01-02 20:00:00.000", "83.87", "4.043"],
  ["2018-01-02 21:00:00.000", "80.25", "5.091"],
  ["2018-01-02 22:00:00.000", "80.63", "5.995"],
  ["2018-01-02 23:00:00.000", "70.25", "6.661"],
  ["2018-01-03 00:00:00.000", "66.75", "4.821"],
  ["2018-01-03 01:00:00.000", "66.12", "7.037"],
  ["2018-01-03 02:00:00.000", "65.38", "5.551"],
  ["2018-01-03 03:00:00.000", "64.87", "4.507"],
  ["2018-01-03 04:00:00.000", "66.25", "5.393"],
  ["2018-01-03 05:00:00.000", "76.5", "4.656"],
  ["2018-01-03 06:00:00.000", "75.38", "5.124"],
  ["2018-01-03 07:00:00.000", "94.25", "4.361"],
  ["2018-01-03 08:00:00.000", "81", "4.019"],
  ["2018-01-03 09:00:00.000", "84.75", "5.891"],
  ["2018-01-03 10:00:00.000", "95.37", "4.028"],
  ["2018-01-03 11:00:00.000", "91.13", "4.139"],
  ["2018-01-03 12:00:00.000", "87.62", "3.85"],
  ["2018-01-03 13:00:00.000", "87", "3.845"],
  ["2018-01-03 14:00:00.000", "90.38", "5.321"],
  ["2018-01-03 15:00:00.000", "87.87", "3.2"],
  ["2018-01-03 16:00:00.000", "93.13", "3"],
  ["2018-01-03 17:00:00.000", "87.75", "3"],
  ["2018-01-03 18:00:00.000", "85.37", "3.776"],
  ["2018-01-03 19:00:00.000", "83.88", "3"],
  ["2018-01-03 20:00:00.000", "81.5", "2.8"],
  ["2018-01-03 21:00:00.000", "84", "2.6"],
  ["2018-01-03 22:00:00.000", "81.75", "2.5"],
  ["2018-01-03 23:00:00.000", "68.12", "2.3"],
  ["2018-01-04 00:00:00.000", "64.13", "2.5"],
  ["2018-01-04 01:00:00.000", "66", "2.6"],
  ["2018-01-04 02:00:00.000", "65.37", "2.5"],
  ["2018-01-04 03:00:00.000", "67.13", "2.3"],
  ["2018-01-04 04:00:00.000", "66.25", "2.3"],
  ["2018-01-04 05:00:00.000", "74.75", "2.5"],
  ["2018-01-04 06:00:00.000", "76.87", "2.5"],
  ["2018-01-04 07:00:00.000", "93.25", "2.4"],
  ["2018-01-04 08:00:00.000", "82.38", "2.5"],
  ["2018-01-04 09:00:00.000", "78.5", "4.383"],
  ["2018-01-04 10:00:00.000", "87.25", "5.882"],
  ["2018-01-04 11:00:00.000", "86.75", "3.758"],
  ["2018-01-04 12:00:00.000", "87.37", "4.26"],
  ["2018-01-04 13:00:00.000", "85.88", "4.011"],
  ["2018-01-04 14:00:00.000", "84.62", "4.109"],
  ["2018-01-04 15:00:00.000", "86.13", "5.966"],
  ["2018-01-04 16:00:00.000", "85.5", "3.3"],
  ["2018-01-04 17:00:00.000", "90.62", "3.4"],
  ["2018-01-04 18:00:00.000", "81.88", "3.3"],
  ["2018-01-04 19:00:00.000", "81.62", "3.3"],
  ["2018-01-04 20:00:00.000", "80", "3.971"],
  ["2018-01-04 21:00:00.000", "82.63", "5.882"],
  ["2018-01-04 22:00:00.000", "79.37", "5.315"],
  ["2018-01-04 23:00:00.000", "69.88", "4.456"],
  ["2018-01-05 00:00:00.000", "64.75", "5.902"],
  ["2018-01-05 01:00:00.000", "65.37", "4.517"],
  ["2018-01-05 02:00:00.000", "68.38", "6.491"],
  ["2018-01-05 03:00:00.000", "68", "4.439"],
  ["2018-01-05 04:00:00.000", "68.37", "6.815"],
  ["2018-01-05 05:00:00.000", "75.63", "4.034"],
  ["2018-01-05 06:00:00.000", "82.5", "3.948"],
  ["2018-01-05 07:00:00.000", "85.25", "5.974"],
  ["2018-01-05 08:00:00.000", "79.75", "4.042"],
  ["2018-01-05 09:00:00.000", "80.25", "5.47"],
  ["2018-01-05 10:00:00.000", "83.75", "4.433"],
  ["2018-01-05 11:00:00.000", "83.75", "5.378"],
  ["2018-01-05 12:00:00.000", "90.62", "3.66"],
  ["2018-01-05 13:00:00.000", "85.25", "3.792"],
  ["2018-01-05 14:00:00.000", "95.38", "4.31"],
  ["2018-01-05 15:00:00.000", "88.25", "3.913"],
  ["2018-01-05 16:00:00.000", "86.87", "5.465"],
  ["2018-01-05 17:00:00.000", "86.88", "5.49"],
  ["2018-01-05 18:00:00.000", "85.75", "4.39"],
  ["2018-01-05 19:00:00.000", "86.87", "4.554"],
  ["2018-01-05 20:00:00.000", "83.38", "5.774"],
  ["2018-01-05 21:00:00.000", "77", "5.614"],
  ["2018-01-05 22:00:00.000", "77", "4.925"],
  ["2018-01-05 23:00:00.000", "68.37", "6.198"],
  ["2018-01-06 00:00:00.000", "63.88", "4.599"],
  ["2018-01-06 01:00:00.000", "64.25", "6.486"],
  ["2018-01-06 02:00:00.000", "64.5", "4.615"],
  ["2018-01-06 03:00:00.000", "64.87", "7.037"],
  ["2018-01-06 04:00:00.000", "65.25", "5.485"],
  ["2018-01-06 05:00:00.000", "65.5", "4.362"],
  ["2018-01-06 06:00:00.000", "73", "3.898"],
  ["2018-01-06 07:00:00.000", "90.13", "4.945"],
  ["2018-01-06 08:00:00.000", "75.37", "5.361"],
  ["2018-01-06 09:00:00.000", "75", "5.792"],
  ["2018-01-06 10:00:00.000", "80.25", "4.256"],
  ["2018-01-06 11:00:00.000", "80.13", "4.919"],
  ["2018-01-06 12:00:00.000", "80.25", "3.919"],
  ["2018-01-06 13:00:00.000", "88.75", "5.44"],
  ["2018-01-06 14:00:00.000", "88.5", "5.259"],
  ["2018-01-06 15:00:00.000", "84.62", "4.599"],
  ["2018-01-06 16:00:00.000", "87.63", "4.92"],
  ["2018-01-06 17:00:00.000", "81.25", "6.062"],
  ["2018-01-06 18:00:00.000", "86.75", "3.903"],
  ["2018-01-06 19:00:00.000", "80.75", "4.33"],
  ["2018-01-06 20:00:00.000", "82", "5.441"]
];
const schemaFetch = [
  {
    name: "Date",
    type: "date",
    format: "%Y-%m-%d %H:%M:%S.%L"
  },
  {
    name: "Energy",
    type: "number"
  },
  {
    name: "Temperature",
    type: "number"
  }
];

const dataSource = {
  chart: {
    theme: "candy",
    multicanvas: false,
    formatNumberScale: "0",
    paletteColors: "#52c41a,#1890ff,#fa8c16,#f5222d",
    exportEnabled: 1,
    exportFileName: "batchExport",
    exportFormat: "jpg",
    exportAtClientSide: 1,
    decimalSeparator: ",",
    thousandSeparator: ".",
    formatNumber: "0"
  },
  caption: {
    text: "Covid 19 Indonesia"
  },
  subcaption: {
    text: "Data from https://data.kemkes.go.id/covid19/index.html"
  },
  yaxis: [
    {
      plot: [
        {
          value: "Energy",
          connectnulldata: true,
          type: "line"
        }
      ],
      format: {
        suffix: " kWh"
      }
    },
    {
      plot: [
        {
          value: "Temperature",
          connectnulldata: true,
          type: "line"
        }
      ],
      format: {
        suffix: " Â°C"
      }
    }
  ],
  xAxis: {
    binning: {
      year: [],
      month: [],
      day: [],
      hour: [],
      minute: [],
      second: [],
      millisecond: []
    },
    outputTimeFormat: {
      //year: "",
      // month: "%b'%y (%q)",
      // day: "%d/%m (%a)",
      // hour: "%-I %p"
      //minute: "",
      //second: "",
      //millisecond: ""
    }
  },
  tooltip: {
    enabled: true,
    toolText: `
    
    <b>$bin </b><br>$series.0.plotIdentifier $series.0.name: $series.0.dataValue<br>$series.1.plotIdentifier $series.1.name: <b>$series.1.dataValue</b>
    `
  }
};

export class TimseriesFushionChart extends React.Component {
  constructor(props) {
    super(props);
    this.onFetchData = this.onFetchData.bind(this);
    this.state = {
      timeseriesDs: {
        type: "timeseries",
        renderAt: "container",
        width: "100%",
        height: "100%",
        dataSource
      }
    };
  }

  componentDidMount() {
    this.onFetchData();
  }

  onFetchData() {
    Promise.all([dataFetch, schemaFetch]).then((res) => {
      const data = res[0];
      const schema = res[1];
      console.log(JSON.stringify(data));
      console.log(JSON.stringify(schema));
      const fusionTable = new FusionCharts.DataStore().createDataTable(
        data,
        schema
      );
      console.log(fusionTable);
      const timeseriesDs = Object.assign({}, this.state.timeseriesDs);
      timeseriesDs.dataSource.data = fusionTable;
      this.setState({
        timeseriesDs
      });

      console.log(this.state.timeseriesDs);
    });
  }

  render() {
    return (
      <div style={{ margin: "0.5em", height: "60vh" }}>
        {this.state.timeseriesDs.dataSource.data ? (
          <>
            <ReactFC {...this.state.timeseriesDs} />
          </>
        ) : (
          "loading"
        )}
      </div>
    );
  }
}
